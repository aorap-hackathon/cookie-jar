import {
  base,
  // baseSepolia,
  celo,
  // celoAlfajores,
  // metalL2,
  // mode,
  optimism,
  // optimismSepolia,
  // sepolia,
} from 'viem/chains';
import { config } from '../wagmi';

export const validChainIds = config.chains.map((chain) => chain.id);

export const pythAddress: { [key in (typeof validChainIds)[number]]: string } =
  {
    // [sepolia.id]: '0xDd24F84d36BF92C65F92307595335bdFab5Bbd21',
    // [optimismSepolia.id]: '0x0708325268dF9F66270F1401206434524814508b',
    // [baseSepolia.id]: '0xA2aa501b19aff244D90cc15a4Cf739D2725B5729',
    // [celoAlfajores.id]: '0x74f09cb3c7e2A01865f424FD14F6dc9A14E3e94E',
    [base.id]: '0x8250f4aF4B972684F7b336503E2D6dFeDeB1487a',
    [optimism.id]: '0xff1a0f4744e8582DF1aE09D5611b887B6a12925C',
    [celo.id]: '0xff1a0f4744e8582DF1aE09D5611b887B6a12925C',
    // [metalL2.id]: '0x0',
    // [mode.id]: '0xA2aa501b19aff244D90cc15a4Cf739D2725B5729',
  };

export const priceFeedId: { [key in (typeof validChainIds)[number]]: string } =
  {
    // [sepolia.id]: '0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace',
    // [optimismSepolia.id]: '0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace',
    // [baseSepolia.id]: '0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace',
    // [celoAlfajores.id]: '0x7d669ddcdd23d9ef1fa9a9cc022ba055ec900e91c4cb960f3c20429d4447a411',
    [base.id]:
      '0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace',
    [optimism.id]:
      '0xff61491a931112ddf1bd8147cd1b641375f79f5825126d665480874634fd0ace',
    [celo.id]:
      '0x7d669ddcdd23d9ef1fa9a9cc022ba055ec900e91c4cb960f3c20429d4447a411',
    // [metalL2.id]: '0x7d669ddcdd23d9ef1fa9a9cc022ba055ec900e91c4cb960f3c20429d4447a411',
    // [mode.id]: '0x7d669ddcdd23d9ef1fa9a9cc022ba055ec900e91c4cb960f3c20429d4447a411',
  };

export const easAddress: { [key in (typeof validChainIds)[number]]: string } = {
  // [sepolia.id]: '0xC2679fBD37d54388Ce493F1DB75320D236e1815e',
  // [optimismSepolia.id]: '0x4200000000000000000000000000000000000021',
  // [baseSepolia.id]: '0x4200000000000000000000000000000000000021',
  // [celoAlfajores.id]: '0x0',
  [base.id]: '0x4200000000000000000000000000000000000021',
  [optimism.id]: '0x4200000000000000000000000000000000000021',
  [celo.id]: '0x72E1d8ccf5299fb36fEfD8CC4394B8ef7e98Af92',
  // [metalL2.id]: '0x0',
  // [mode.id]: '0x0',
};

export const jarContractAbi = [
  {
    inputs: [
      { internalType: 'string', name: '_name', type: 'string' },
      { internalType: 'string', name: '_description', type: 'string' },
      { internalType: 'uint256', name: '_withdrawalLimit', type: 'uint256' },
      { internalType: 'uint256', name: '_cooldownPeriod', type: 'uint256' },
      { internalType: 'address', name: '_easAddress', type: 'address' },
      { internalType: 'address', name: '_pythAddress', type: 'address' },
      { internalType: 'bytes32', name: '_priceFeedId', type: 'bytes32' },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  { inputs: [], name: 'AccessControlBadConfirmation', type: 'error' },
  {
    inputs: [
      { internalType: 'address', name: 'account', type: 'address' },
      { internalType: 'bytes32', name: 'neededRole', type: 'bytes32' },
    ],
    name: 'AccessControlUnauthorizedAccount',
    type: 'error',
  },
  { inputs: [], name: 'AccessDenied', type: 'error' },
  { inputs: [], name: 'InsufficientValue', type: 'error' },
  { inputs: [], name: 'InvalidEAS', type: 'error' },
  { inputs: [], name: 'InvalidLength', type: 'error' },
  { inputs: [], name: 'NotPayable', type: 'error' },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      { indexed: false, internalType: 'string', name: 'note', type: 'string' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'depositId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'attestUid',
        type: 'bytes32',
      },
    ],
    name: 'DepositMade',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32',
      },
    ],
    name: 'RoleAdminChanged',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleGranted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'bytes32', name: 'role', type: 'bytes32' },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
    ],
    name: 'RoleRevoked',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'voter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'withdrawalId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'attestUid',
        type: 'bytes32',
      },
    ],
    name: 'VoteRemoved',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'voter',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'withdrawalId',
        type: 'uint256',
      },
      { indexed: false, internalType: 'bool', name: 'isUpvote', type: 'bool' },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'attestUid',
        type: 'bytes32',
      },
    ],
    name: 'Voted',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      { indexed: true, internalType: 'address', name: 'user', type: 'address' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'amount',
        type: 'uint256',
      },
      { indexed: false, internalType: 'string', name: 'note', type: 'string' },
      {
        indexed: false,
        internalType: 'uint256',
        name: 'withdrawalId',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'bytes32',
        name: 'attestUid',
        type: 'bytes32',
      },
    ],
    name: 'WithdrawalMade',
    type: 'event',
  },
  {
    inputs: [],
    name: 'DAO_MEMBER_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_admin', type: 'address' }],
    name: 'addAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_newMember', type: 'address' }],
    name: 'addDAOMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation',
        name: 'attestation',
        type: 'tuple',
      },
    ],
    name: 'attest',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'cooldownPeriod',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      { internalType: 'string', name: '_note', type: 'string' },
      { internalType: 'bytes[]', name: 'priceUpdate', type: 'bytes[]' },
    ],
    name: 'deposit',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'depositEasSchema',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'deposits',
    outputs: [
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'string', name: 'note', type: 'string' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'description',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'emergencyWithdrawNative',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getDepositsCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],
    name: 'getRoleAdmin',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getWithdrawalsCount',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'hasRole',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_admin', type: 'address' }],
    name: 'isAdmin',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_member', type: 'address' }],
    name: 'isDAOMember',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'isPayable',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'pure',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'address', name: '', type: 'address' },
      { internalType: 'uint256', name: '', type: 'uint256' },
    ],
    name: 'lastVote',
    outputs: [
      { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
      { internalType: 'bool', name: 'isUpvote', type: 'bool' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '', type: 'address' }],
    name: 'lastWithdrawalTime',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation[]',
        name: 'attestations',
        type: 'tuple[]',
      },
      { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
    ],
    name: 'multiAttest',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation[]',
        name: 'attestations',
        type: 'tuple[]',
      },
      { internalType: 'uint256[]', name: 'values', type: 'uint256[]' },
    ],
    name: 'multiRevoke',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'name',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'priceFeedId',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_admin', type: 'address' }],
    name: 'removeAdmin',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'address', name: '_member', type: 'address' }],
    name: 'removeDAOMember',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'callerConfirmation', type: 'address' },
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        components: [
          { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
          { internalType: 'bytes32', name: 'schema', type: 'bytes32' },
          { internalType: 'uint64', name: 'time', type: 'uint64' },
          { internalType: 'uint64', name: 'expirationTime', type: 'uint64' },
          { internalType: 'uint64', name: 'revocationTime', type: 'uint64' },
          { internalType: 'bytes32', name: 'refUID', type: 'bytes32' },
          { internalType: 'address', name: 'recipient', type: 'address' },
          { internalType: 'address', name: 'attester', type: 'address' },
          { internalType: 'bool', name: 'revocable', type: 'bool' },
          { internalType: 'bytes', name: 'data', type: 'bytes' },
        ],
        internalType: 'struct Attestation',
        name: 'attestation',
        type: 'tuple',
      },
    ],
    name: 'revoke',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'bytes32', name: 'role', type: 'bytes32' },
      { internalType: 'address', name: 'account', type: 'address' },
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_newPeriod', type: 'uint256' }],
    name: 'setCooldownPeriod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '_newLimit', type: 'uint256' }],
    name: 'setWithdrawalLimit',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],
    name: 'supportsInterface',
    outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'version',
    outputs: [{ internalType: 'string', name: '', type: 'string' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'voteEasSchema',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_withdrawalId', type: 'uint256' },
      { internalType: 'bool', name: '_isUpvote', type: 'bool' },
    ],
    name: 'voteOnWithdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      { internalType: 'uint256', name: '_amount', type: 'uint256' },
      { internalType: 'string', name: '_note', type: 'string' },
      { internalType: 'bytes[]', name: 'priceUpdate', type: 'bytes[]' },
    ],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawEasSchema',
    outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'withdrawalLimit',
    outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
    name: 'withdrawals',
    outputs: [
      { internalType: 'address', name: 'user', type: 'address' },
      { internalType: 'uint256', name: 'amount', type: 'uint256' },
      { internalType: 'string', name: 'note', type: 'string' },
      { internalType: 'uint256', name: 'timestamp', type: 'uint256' },
      { internalType: 'int256', name: 'votes', type: 'int256' },
      { internalType: 'bytes32', name: 'uid', type: 'bytes32' },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  { stateMutability: 'payable', type: 'receive' },
] as const;
